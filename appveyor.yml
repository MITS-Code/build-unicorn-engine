version: 1.0.{build}
skip_tags: true
environment:
    CYG_MIRROR: http://cygwin.mirror.constant.com
    CYG_PACKAGES: make,gcc-core,clang,pkg-config,libpcre-devel,cmake,python-setuptools,ruby,mingw64-i686-gcc-core,mingw64-x86_64-gcc-core
    MSYS_PACKAGES: cmake
    TIMESTAMP: x
    matrix:
        - CC: msvc
          PF: MSVC32
        - CC: msvc
          PF: MSVC64
        - MSYSTEM: MINGW64
          BASH: C:\msys64\usr\bin\bash
          MSYS_CACHE: C:\msys64\var\cache\pacman\pkg
          CC: x86_64-w64-mingw32-gcc
          PF: MinGW64
        - MSYSTEM: MINGW32
          BASH: C:\msys64\usr\bin\bash
          MSYS_CACHE: C:\msys64\var\cache\pacman\pkg
          CC: i686-w64-mingw32-gcc
          PF: MinGW32
        - CYG_ROOT: C:\cygwin64
          CYG_CACHE: C:\cygwin64\var\cache\setup
          CYG_SETUP: setup-x86_64.exe
          BASH: C:\cygwin64\bin\bash
          CC: gcc
          PF: Cyg64
        - CYG_ROOT: C:\cygwin
          CYG_CACHE: C:\cygwin\var\cache\setup
          CYG_SETUP: setup-x86.exe
          BASH: C:\cygwin\bin\bash
          CC: gcc
          PF: Cyg32
cache:
    - '%CYG_CACHE%'
    - '%MSYS_CACHE%'
clone_depth: 1
init:
    - git config --global core.autocrlf input
install:
    - cmd: >-
          git submodule update --init --recursive --remote
          
          cd unicorn     
    - ps: if (Test-Path Env:\CYG_ROOT) { Start-FileDownload "http://cygwin.com/$env:CYG_SETUP" -FileName "$env:CYG_SETUP" }
    - if defined CYG_ROOT (%CYG_SETUP% --quiet-mode --no-shortcuts --only-site --root "%CYG_ROOT%" --site "%CYG_MIRROR%" --local-package-dir "%CYG_CACHE%" --packages "%CYG_PACKAGES%" --upgrade-also)
    - if defined MSYSTEM (%BASH% -lc "pacman -Suuy --noconfirm ${MSYS_PACKAGES}")
    - if defined MSYSTEM (%BASH% -lc "pacman -Suuy --noconfirm")
build_script:
    - if defined BASH (%BASH% -lc "cd $(cygpath ${APPVEYOR_BUILD_FOLDER}/unicorn) && make")
    - if "%MSYSTEM%" == "MINGW64" (%BASH% -lc "cd $(cygpath ${APPVEYOR_BUILD_FOLDER}/unicorn) && make -C bindings/go")
    - if "%PF%" == "MSVC32" (msbuild %APPVEYOR_BUILD_FOLDER%/unicorn/msvc/unicorn.sln /verbosity:minimal /t:Build /p:Configuration=Release;Platform=Win32)
    - if "%PF%" == "MSVC64" (msbuild %APPVEYOR_BUILD_FOLDER%/unicorn/msvc/unicorn.sln /verbosity:minimal /t:Build /p:Configuration=Release;Platform=x64)

after_build:
- ps: $Env:TIMESTAMP = Get-Date -UFormat %d%m%y.%H%M
test_script:
    - if defined CYG_ROOT (%BASH% -lc "cd $APPVEYOR_BUILD_FOLDER/unicorn && ./install-cmocka-linux.sh && export PATH=$PATH:$APPVEYOR_BUILD_FOLDER/unicorn:$APPVEYOR_BUILD_FOLDER/unicorn/cmocka/src && make test")
artifacts:
- path: unicorn/
  name: Unicorn.v%APPVEYOR_BUILD_VERSION%.%PF%.b%TIMESTAMP%
deploy:
- provider: GitHub
  auth_token:
    secure: 6PJOp+cW01YiibFnGYdI2nWHwuA5dDU1YaFQBZUNOrTcGAnklAh2Y0d6f2kuoyp/